{"version":3,"sources":["context/MyContext.js","context/MyProvider.js","component/PageWrapper.js","component/PokemonCard.js","component/PokemonListData.js","container/PokemonList.js","component/Form.js","component/Modal.js","component/PokemonSpec.js","component/RandomButton.js","container/PokemonDetail.js","container/MyPokemon.js","component/BottomNavBar.js","component/Wrapper.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["MyContext","React","createContext","MyProvider","props","actions","useReducer","state","action","type","pokemonList","value","checkData","map","poke","name","Object","assign","count","myPokemonList","concat","activePokemon","dataReleaseNew","newArray","filter","result","nickname","Error","dispatch","allStateData","myPokemon","setAllStateData","setPokemonList","addMyPokemon","releaseMyPokemon","setActivePokemon","Provider","children","PageWrapper","Wrapper","styled","Title","data-testid","title","PokemonCard","context","useContext","Count","Card","CardName","Button","CardText","className","data","src","image","alt","onClick","PokemonListData","history","useHistory","goToDetail","push","List","GetAllPokemonQuery","gql","useQuery","loading","error","useEffect","length","newPokemonListData","pokemons","results","console","log","Consumer","dataPokemon","PokemonList","ListWrapper","Form","useState","nicknameInput","setNicknameInput","errorMessage","setErrorMessage","onSubmit","e","preventDefault","dataActivePokemon","onChange","currentTarget","style","padding","border","color","margin","width","borderRadius","boxSizing","Modal","ModalBg","ModalBody","ModalContent","ModalImage","Name","closeModal","PokemonSpec","Specs","Spec","move","RandomButton","randomValue","Math","random","getRandom","PokemonDetail","pokemonName","useParams","successCatch","setSuccessCatch","isModalOpen","setIsModalOpen","Container","ImageWrapper","queryVariable","GetdetailPokemonQuery","variables","GetSpecDetail","pokemon","types","moves","getRandomValue","MyPokemon","index","BottomNavBar","Row","Column","NavName","to","icon","faBook","faHandHoldingHeart","sessionStorage","getItem","parsedData","JSON","parse","setItem","stringify","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cb779cca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext;","import { useReducer } from 'react';\r\nimport MyContext from './MyContext';\r\n\r\nconst MyProvider = (props) =>{\r\n\r\n\tconst initialState = {\r\n\t\tpokemonList : [],\r\n\t\tmyPokemonList: [],\r\n\t\tactivePokemon: {},\r\n\t\tcount: 0,\r\n\t};\r\n\r\n\tconst actions = {\r\n\t\tSET_POKEMONLIST: 'SET_POKEMONLIST',\r\n\t\tADD_MYPOKEMON: 'ADD_MYPOKEMON',\r\n\t\tRELEASE_MYPOKEMON: 'RELEASE_MYPOKEMON',\r\n\t\tSET_ACTIVEPOKEMON: 'SET_ACTIVEPOKEMON',\r\n\t\tSET_ALLSTATEDATA: 'SET_ALLSTATEDATA'\r\n\t}\r\n\r\n\tfunction reducer(state, action) {\r\n\t\tswitch (action.type) {\r\n\t\tcase actions.SET_POKEMONLIST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpokemonList: action.value\r\n\t\t\t}\r\n\t\tcase actions.ADD_MYPOKEMON:\r\n\t\t\tlet copyPokemonList = [...state.pokemonList]\r\n\t\t\tconst checkData= copyPokemonList.map(poke =>{\r\n\t\t\t\tif(poke.name === action.value.name){\r\n\t\t\t\t\treturn Object.assign({}, poke, {count: poke.count+1})\r\n\t\t\t\t}\r\n\t\t\t\treturn poke;\r\n\t\t\t})\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmyPokemonList: state.myPokemonList.concat(action.value),\r\n\t\t\t\tactivePokemon: [],\r\n\t\t\t\tpokemonList: checkData\r\n\t\t\t}\r\n\t\tcase actions.RELEASE_MYPOKEMON:\r\n\t\t\tlet copyPokemonListRelease = [...state.pokemonList]\r\n\t\t\tconst dataReleaseNew= copyPokemonListRelease.map(poke =>{\r\n\t\t\t\tif(poke.name === action.value.name){\r\n\t\t\t\t\treturn Object.assign({}, poke, {count: poke.count-1})\r\n\t\t\t\t}\r\n\t\t\t\treturn poke;\r\n\t\t\t})\r\n\t\t\tconst newArray = state.myPokemonList.filter(result=> result.nickname !== action.value.nickname)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmyPokemonList: newArray,\r\n\t\t\t\tpokemonList: dataReleaseNew\r\n\t\t\t}\r\n\t\tcase actions.SET_ACTIVEPOKEMON:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactivePokemon: action.value\r\n\t\t\t}\r\n\t\tcase actions.SET_ALLSTATEDATA:\r\n\t\t\treturn action.value\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t}\r\n\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n\tconst value = {\r\n\t\tallStateData: state,\r\n\t\tmyPokemon: state.myPokemonList,\r\n\t\tactivePokemon: state.activePokemon,\r\n\t\tpokemonList: state.pokemonList,\r\n\t\tsetAllStateData: (value) => { dispatch ({type: actions.SET_ALLSTATEDATA, value: value})},\r\n\t\tsetPokemonList: (value) => { dispatch ({type: actions.SET_POKEMONLIST, value: value})},\r\n\t\taddMyPokemon: (value) => { dispatch ({type: actions.ADD_MYPOKEMON, value: value})},\r\n\t\treleaseMyPokemon: (value) => { dispatch ({type: actions.RELEASE_MYPOKEMON, value: value})},\r\n\t\tsetActivePokemon: (value) => { dispatch ({type: actions.SET_ACTIVEPOKEMON, value: value})},\r\n\t}\r\n\r\n\treturn (\r\n\t\t<MyContext.Provider\r\n\t\t\tvalue={value}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</MyContext.Provider>\r\n\t);\r\n\t\r\n}\r\nexport default MyProvider;\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nconst PageWrapper = (props) =>{\r\n\r\n\tconst Wrapper = styled('div')`\r\n\t\tpadding: 15px 10px;\r\n\t`;\r\n\r\n\tconst Title = styled('h4')`\r\n\t\tfont-size: 20px;\r\n\t\tmargin-top: 0px;\r\n\t\tmargin-bottom: 20px;\r\n\t\tcolor: #3d7dca ;\r\n\t\ttext-align: center;\r\n\t\ttext-transform: capitalize;\r\n\t\t&:after{\r\n\t\t\tcontent: \"\";\r\n\t\t\twidth: 60px;\r\n\t\t\tmargin: auto;\r\n\t\t\tbackground: linear-gradient(165.7deg , #20FDF0 4.24%, #94AAF9 86.78%);\r\n\t\t\theight: 3px;\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin-top: 5px;\r\n\t\t}\r\n\t`;\r\n\r\n\treturn(\r\n\t\t<Wrapper>\r\n\t\t\t<Title>\r\n\t\t\t\t<span data-testid=\"page-title\">{props.title}</span>\r\n\t\t\t</Title>\r\n\t\t\t{props.children}\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nexport default PageWrapper;","import styled from '@emotion/styled';\r\nimport { useContext } from 'react';\r\nimport MyContext from '../context/MyContext';\r\n\r\nconst PokemonCard = (props) =>{\r\n\t\r\n\tconst context = useContext(MyContext);\r\n\tconst releasePokemon = (nickname,name) =>{\r\n\t\tcontext.releaseMyPokemon({nickname, name})\r\n\t}\r\n\t\r\n\tconst Count = styled('div')`\r\n\t\tposition: absolute;\r\n\t\tright: 5px;\r\n\t\ttop: 5px;\r\n\t\tborder-radius: 25px;\r\n\t\twidth: 30px;\r\n\t\theight: 30px;\r\n\t\ttext-align: center;\r\n\t\tborder: 2px solid #f1f1f1;\r\n\t\t&:before{\r\n\t\t\tcontent: \"\";\r\n\t\t\twidth: 30px;\r\n\t\t\theight: 15px;\r\n\t\t\tbackground-color: white;\r\n\t\t\tposition: absolute;\r\n\t\t\tborder-radius: 0 0 200px 200px;\r\n\t\t\tleft: 0;\r\n\t\t\tbottom: 0;\r\n\t\t}\r\n\t\t&:after{\r\n\t\t\tcontent: \"\";\r\n\t\t\twidth: 30px;\r\n\t\t\theight: 15px;\r\n\t\t\tbackground-color: #FF0000;\r\n\t\t\tposition: absolute;\r\n\t\t\tborder-radius: 0 0 200px 200px;\r\n\t\t\tleft: 0;\r\n\t\t\ttop: 0;\r\n\t\t\ttransform: rotate(180deg);\r\n\t\t}\r\n\t\t&>span{\r\n\t\t\tfont-size: 12px;\r\n\t\t\tbackground: #ddd;\r\n\t\t\tcolor: #3d7dca;\r\n\t\t\tposition: absolute;\r\n\t\t\tz-index: 1;\r\n\t\t\tfont-weight: bold;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\ttop: 50%;\r\n\t\t\tleft: 50%;\r\n\t\t\ttransform: translateX(-50%) translateY(-50%);\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tline-height: 20px;\r\n\t\t}\r\n\t`;\r\n\r\n\tconst Card = styled('div')`\r\n\t\tpadding: 10px;\r\n\t\ttext-align: center;\r\n\t\tborder-radius: 15px;\r\n\t\tbackground: white;\r\n\t\tborder: none;\r\n\t\tposition: relative;\r\n\t\tmargin: 0px 10px 15px;\r\n\t\ttransition: 0.25s ease-in-out;\r\n\t\t&:hover{\r\n\t\t\tbackground: linear-gradient(180deg, #FFFFFF 57.29%, #BAFBFF 100%);\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t\t&.mypokemon-card{\r\n\t\t\t&:hover{\r\n\t\t\t\tcursor: auto;\r\n\t\t\t\tbackground: white;\r\n\t\t\t}\r\n\t\t}\r\n\t`;\r\n\r\n\tconst CardName = styled('h4')`\r\n\t\ttext-transform: capitalize;\r\n\t\tmargin-top: 0px;\r\n\t\tmargin-bottom: 0px;\r\n\t\tcolor: #3d7dca ;\r\n\t`;\r\n\r\n\tconst Button = styled('button')`\r\n\t\tbackground: linear-gradient(160deg , #20FDF0 1.24%, #94AAF9 93.78%);\r\n\t\tborder: none;\r\n\t\tborder-radius: 30px;\r\n\t\tpadding: 6px 25px;\r\n\t\tmargin: 5px;\r\n\t\tcolor: white;\r\n\t\tcursor: pointer;\r\n\t\ttransition: 0.25s ease-in-out;\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t\t&:hover{\r\n\t\t\tbackground: linear-gradient(320deg , #20FDF0 1.24%, #94AAF9 93.78%);\r\n\t\t}\r\n\t\t&:focus{\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t`;\r\n\r\n\tconst CardText = styled('h5')`\r\n\t\ttext-transform: capitalize;\r\n\t\tmargin-top: 0px;\r\n\t\tmargin-bottom: 0px;\r\n\t\tcolor: #b7b7b7;\r\n\t\tfont-size: 12px;\r\n\t\tfont-weight: 400;\r\n\t\tmargin-bottom: 5px;\r\n\t`;\r\n\r\n\treturn(\r\n\t\t<Card className={props.data.nickname && 'mypokemon-card'}>\r\n\t\t\t<img src={props.data.image} alt={`${props.data.name} Icon`} />\r\n\t\t\t{\r\n\t\t\t\tprops.data.nickname ?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<CardName>{props.data.nickname}</CardName>\r\n\t\t\t\t\t<CardText>{props.data.name}</CardText> \r\n\t\t\t\t\t<Button data-testid=\"release\" onClick={() => releasePokemon(props.data.nickname, props.data.name)}>Release Me</Button>\r\n\t\t\t\t</>\r\n\t\t\t\t:\r\n\t\t\t\t<>\r\n\t\t\t\t\t<CardName>{props.data.name}</CardName> \r\n\t\t\t\t\t<Count><span>{props.data.count}</span></Count>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default PokemonCard;","import { useQuery, gql } from '@apollo/client';\r\nimport styled from '@emotion/styled';\r\nimport PokemonCard from './PokemonCard';\r\nimport { useContext, useEffect } from 'react';\r\nimport MyContext from '../context/MyContext';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst PokemonListData = () =>{\r\n\r\n\tconst history = useHistory();\r\n\tconst context = useContext(MyContext);\r\n\r\n\tconst goToDetail = (data) =>{\r\n\t\tcontext.setActivePokemon(data)\r\n\t\thistory.push(`/${data.name}`)\r\n\t}\r\n\tconst List = styled('div')`\r\n\t\t-webkit-box-flex: 0;\r\n\t\t-ms-flex: 0 0 50%;\r\n\t\tflex: 0 0 50%;\r\n\t\tmax-width: 50%;\r\n\t\t& > a{\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\t`;\r\n\r\n\tconst Button = styled('button')`\r\n\t\tdisplay: block;\r\n\t\tborder: none;\r\n\t\tbackground: transparent;\r\n\t\twidth: 100%;\r\n\t\tpadding: 0px;\r\n\t\t&:focus{\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t`;\r\n\tconst GetAllPokemonQuery = gql`query pokemons($limit: Int, $offset: Int) {\r\n\t\tpokemons(limit: $limit, offset: $offset) {\r\n\t\tcount\r\n\t\tnext\r\n\t\tprevious\r\n\t\tstatus\r\n\t\tmessage\r\n\t\tresults {\r\n\t\t\turl\r\n\t\t\tname\r\n\t\t\timage\r\n\t\t}\r\n\t\t}\r\n\t}`;\r\n\tconst { loading, error, data } = useQuery(GetAllPokemonQuery, {\r\n\t\t\"limit\": 2,\r\n\t\t\"offset\": 1\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tif(context.pokemonList.length <= 0){\r\n\t\t\tif (data) {\r\n\t\t\t\tlet copyPokemonList = [...data.pokemons.results]\r\n\t\r\n\t\t\t\tconst newPokemonListData= copyPokemonList.map(poke =>{\r\n\t\t\t\t\treturn Object.assign({}, poke, {count: 0})\r\n\t\t\t\t})\r\n\t\t\t\tcontext.setPokemonList(newPokemonListData)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [data, context])\r\n\tconsole.log(data)\r\n\r\n\tif (loading) return <p>Loading...</p>;\r\n\tif (error) return <p>Error :(</p>;\r\n\t\r\n\treturn(\r\n\t\t<MyContext.Consumer>\r\n\t\t\t{context => (\r\n\t\t\t\tcontext.pokemonList.map(dataPokemon => (\r\n\t\t\t\t\t<List key={dataPokemon.name} >\r\n\t\t\t\t\t\t<Button onClick={() => goToDetail(dataPokemon)}>\r\n\t\t\t\t\t\t\t<PokemonCard data={dataPokemon}></PokemonCard>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</MyContext.Consumer>\r\n\t)\r\n}\r\n\r\nexport default PokemonListData;","import styled from '@emotion/styled';\r\nimport PageWrapper from '../component/PageWrapper';\r\nimport PokemonListData from '../component/PokemonListData';\r\n\r\nconst PokemonList = () =>{\r\n\r\n\tconst ListWrapper = styled('div')`\r\n\t\tdisplay: flex;\r\n\t\t-ms-flex-wrap: wrap;\r\n\t\tflex-wrap: wrap;\r\n\t`;\r\n\r\n  \treturn(\r\n\t\t<PageWrapper title=\"Pokemon List\">\r\n\t\t\t<ListWrapper>\r\n\t\t\t\t<PokemonListData/>\r\n\t\t\t</ListWrapper>\r\n\t\t</PageWrapper>\r\n\t)\r\n}\r\n\r\nexport default PokemonList;","import { useContext, useState } from \"react\";\r\nimport MyContext from '../context/MyContext';\r\nimport styled from '@emotion/styled';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Form = () =>{\r\n\r\n\tconst [nicknameInput, setNicknameInput] = useState('');\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setNicknameInput(e.currentTarget.value);\r\n\t};\r\n\tconst context = useContext(MyContext);\r\n\tconst history = useHistory();\r\n\t\r\n\tconst onSubmit = (e) =>{\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tconst copyMyPokemonList = [...context.myPokemon]\r\n\t\tconst nicknameFilter = copyMyPokemonList.filter(result=> result.nickname === nicknameInput)\r\n\t\tif(nicknameFilter.length >= 1){\r\n\t\t\tsetErrorMessage(true)\r\n\t\t}else{\r\n\t\t\tconst dataActivePokemon = {...context.activePokemon}\r\n\t\t\tdataActivePokemon.nickname = nicknameInput\r\n\t\t\tcontext.addMyPokemon(dataActivePokemon)\r\n\t\t\thistory.push('/my-pokemon');\r\n\t\t}\r\n\t}\r\n\r\n\tconst Button = styled('button')`\r\n\t\tbackground: linear-gradient(160deg , #20FDF0 1.24%, #94AAF9 93.78%);\r\n\t\tborder: none;\r\n\t\tborder-radius: 30px;\r\n\t\tpadding: 6px 25px;\r\n\t\tmargin: 5px;\r\n\t\tcolor: white;\r\n\t\tcursor: pointer;\r\n\t\ttransition: 0.25s ease-in-out;\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t\tposition: relative;\r\n\t\t&:hover{\r\n\t\t\tbackground: linear-gradient(320deg , #20FDF0 1.24%, #94AAF9 93.78%);\r\n\t\t}\r\n\t\t&:focus{\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t`;\r\n\r\n\tconst Error = styled('span')`\r\n\t\tfont-size: 11px;\r\n\t\tfont-style: italic;\r\n\t\tcolor: red;\r\n\t`;\r\n\t\r\n\treturn(\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t<label>\r\n\t\t\t\tGotcha, give me a name!\r\n\t\t\t</label>\r\n\t\t\t<input type=\"text\" onChange={onChange} data-testid=\"input-nickname\" value={nicknameInput} style={{\r\n\t\t\t\tpadding: \"10px\",\r\n\t\t\t\tborder: '1px solid #3d7dca',\r\n\t\t\t\tcolor: '#3d7dca',\r\n\t\t\t\tmargin: '10px 0px',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\tborderRadius: '5px',\r\n\t\t\t\tboxSizing: 'border-box'\r\n\t\t\t}}/>\r\n\t\t\t{errorMessage && <Error>Nickname sudah terdaftar!</Error>}\r\n\t\t\t<Button type=\"submit\">Submit</Button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Form;","import styled from '@emotion/styled';\r\nimport { Fragment } from 'react';\r\nimport MyContext from '../context/MyContext';\r\nimport Form from './Form';\r\n\r\nconst Modal = (props) =>{\r\n\r\n\tconst ModalBg = styled('div')`\r\n\t\tz-index: 999;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tbackground: rgba(0,0,0,0.3);\r\n\t`;\r\n\r\n\tconst ModalBody = styled('div')`\r\n\t\tz-index: 1000;\r\n\t\tposition: absolute;\r\n\t\ttop: 42%;\r\n\t\tleft: 50%;\r\n\t\twidth: 280px;\r\n\t\tmax-width: 100%;\r\n\t\tmin-height: 100px;\r\n\t\tborder-radius: 10px;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tbackground: #fff;\r\n\t`;\r\n\r\n\tconst ModalContent = styled('div')`\r\n\t\tpadding: 20px;\r\n\t`;\r\n\r\n\tconst ModalImage = styled('div')`\r\n\t\tposition: relative;\r\n\t\t& > img{\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: -70px;\r\n\t\t\tleft: 50%;\r\n\t\t\ttransform: translateX(-50%) scale(1.5);\r\n\t\t}\r\n\t`;\r\n\r\n\tconst Name = styled('h3')`\r\n\t\ttext-align: center;\r\n\t\ttext-transform: capitalize;\r\n\t\tcolor: #3d7dca;\r\n\t\tmargin-top: 20px;\r\n\t`;\r\n\r\n\treturn(\r\n\r\n\t\t<MyContext.Consumer>\r\n\t\t\t{context => (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<ModalImage>\r\n\t\t\t\t\t\t\t<img src={context.activePokemon.image} alt=\"\"/>\r\n\t\t\t\t\t\t</ModalImage>\r\n\t\t\t\t\t\t<ModalContent>\r\n\t\t\t\t\t\t\t<Name>{context.activePokemon.name}</Name>\r\n\t\t\t\t\t\t\t<Form/>\r\n\t\t\t\t\t\t</ModalContent>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalBg onClick={props.closeModal} />\t\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</MyContext.Consumer>\r\n\t)\r\n}\r\n\r\nexport default Modal;","import styled from '@emotion/styled';\r\n\r\nconst PokemonSpec = (props) =>{\r\n\r\n\tconst Title = styled('h5')`\r\n\t\tfont-size: 14px;\r\n\t\tmargin-top: 30px;\r\n\t\tmargin-bottom: 10px;\r\n\t\tcolor: #2f4f4f ;\r\n\t\ttext-transform: capitalize;\r\n\t`;\r\n\r\n\tconst Wrapper = styled('div')`\r\n\t\tmargin-bottom: 15px;\r\n\t\ttext-align: center;\r\n\t\t@media (min-width: 768px) {\r\n\t\t\ttext-align: left;\r\n\t\t\tflex-basis: 180px;\r\n\t\t\t&.moves{\r\n\t\t\t\tflex-basis: calc(100% - 180px);\r\n\t\t\t}\r\n\t\t}\r\n\t`;\r\n\r\n\tconst Specs = styled('ul')`\r\n\t\tmargin-bottom: 0px;\r\n\t\tlist-style: none;\r\n\t\tpadding-left: 0px;\r\n\t`;\r\n\r\n\tconst Spec = styled('li')`\r\n\t\tdisplay: inline-block;\r\n\t\tmargin-right: 5px;\r\n\t\tcolor: white;\r\n\t\tbackground: white;\r\n\t\tpadding: 3px 10px;\r\n\t\tborder-radius: 20px;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 1.2;\r\n\t\tcolor: #3d7dca;\r\n\t\ttext-transform: capitalize;\r\n\t`;\r\n\r\n\treturn(\r\n\t\t<Wrapper className={props.name === 'moves' && 'moves'}>\r\n\t\t\t<Specs>\r\n\t\t\t\t<Title>\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</Title>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.name === 'types' ?\r\n\t\t\t\t\tprops.data.map(data => (\r\n\t\t\t\t\t\t<Spec key={data.type.name} >\r\n\t\t\t\t\t\t\t{data.type.name}\r\n\t\t\t\t\t\t</Spec>\r\n\t\t\t\t\t))\r\n\t\t\t\t\t:\r\n\t\t\t\t\tprops.data.map(data => (\r\n\t\t\t\t\t\t<Spec key={data.move.name} >\r\n\t\t\t\t\t\t\t{data.move.name}\r\n\t\t\t\t\t\t</Spec>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</Specs>\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nexport default PokemonSpec;","import styled from '@emotion/styled';\r\n\r\nconst RandomButton = (props) =>{\r\n\tconst Button = styled('button')`\r\n\t\tbackground: linear-gradient(160deg , #20FDF0 1.24%, #94AAF9 93.78%);\r\n\t\tborder: none;\r\n\t\tborder-radius: 30px;\r\n\t\tpadding: 6px 25px;\r\n\t\tmargin: 5px;\r\n\t\tcolor: white;\r\n\t\tcursor: pointer;\r\n\t\ttransition: 0.25s ease-in-out;\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t\tposition: relative;\r\n\t\t&:hover{\r\n\t\t\tbackground: linear-gradient(320deg , #20FDF0 1.24%, #94AAF9 93.78%);\r\n\t\t}\r\n\t\t&:focus{\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t`;\r\n\r\n\tconst succesWith50PercentChance = () =>{\r\n\t\tvar randomValue = Math.random() < 0.5\r\n\t\tprops.getRandom(randomValue)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<Button data-testid=\"random-button\" onClick={succesWith50PercentChance}>Catch Me!</Button>\r\n\t)\r\n}\r\n\r\nexport default RandomButton;","import { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport MyContext from '../context/MyContext';\r\nimport Modal from '../component/Modal';\r\nimport PageWrapper from '../component/PageWrapper';\r\nimport PokemonSpec from '../component/PokemonSpec';\r\nimport RandomButton from '../component/RandomButton';\r\nimport styled from '@emotion/styled';\r\n\r\nconst PokemonDetail = () =>{\r\n\tlet { pokemonName } = useParams();\r\n\r\n\tconst [successCatch, setSuccessCatch] = useState(false);\r\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n\tconst Container = styled('div')`\r\n\t\tmargin: 0px 20px;\r\n\t\ttext-align: center;\r\n\t`;\r\n\r\n\tconst ImageWrapper = styled('div')`\r\n\t\twidth: 180px;\r\n\t\theight: 180px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmargin: auto;\r\n\t\t&>img{\r\n\t\t\ttransform: scale(2.0);\r\n\t\t}\r\n\t`;\r\n\t\r\n\tconst queryVariable = {\r\n\t\t\"name\": pokemonName\r\n\t};\r\n\r\n\tconst GetdetailPokemonQuery = gql`query pokemon($name: String!) {\r\n\t\tpokemon(name: $name) {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\tabilities {\r\n\t\t\t\tability {\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmoves {\r\n\t\t\t\tmove {\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttypes {\r\n\t\t\t\ttype {\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmessage\r\n\t\t\tstatus\r\n\t\t}\r\n\t}`;\r\n\r\n\tconst { loading, error, data } = useQuery(GetdetailPokemonQuery, {\r\n\t\tvariables : queryVariable\r\n\t});\r\n\r\n\tif (loading) return <PageWrapper>Loading...</PageWrapper>;\r\n\tif (error) return <PageWrapper>Error :(</PageWrapper>;\r\n\r\n\tconst GetSpecDetail = () =>{\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<PokemonSpec title=\"Pokemon Types\" data={data.pokemon.types} name=\"types\" />\r\n\t\t\t\t<PokemonSpec title=\"Pokemon Moves\" data={data.pokemon.moves} name=\"moves\" />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst getRandomValue = (value) =>{\r\n\t\tsetSuccessCatch(value)\r\n\t\tif(value){\r\n\t\t\tsetIsModalOpen(true)\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst closeModal = () =>{\r\n\t\tsetIsModalOpen(false)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<PageWrapper title={pokemonName}>\r\n\t\t\t<Container>\r\n\t\t\t\t<MyContext.Consumer>\r\n\t\t\t\t\t{context => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<ImageWrapper>\r\n\t\t\t\t\t\t\t\t<img src={context.activePokemon.image} alt={context.activePokemon.name}/>\r\n\t\t\t\t\t\t\t</ImageWrapper>\r\n\t\t\t\t\t\t\t{(successCatch && isModalOpen) && <Modal closeModal={closeModal} />}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</MyContext.Consumer>\r\n\t\t\t\t<RandomButton getRandom={(value)=> getRandomValue(value)} />\r\n\t\t\t\t<GetSpecDetail></GetSpecDetail>\r\n\t\t\t</Container>\r\n\t\t</PageWrapper>\r\n\t)\r\n}\r\n\r\nexport default PokemonDetail;","import styled from '@emotion/styled';\r\nimport MyContext from '../context/MyContext';\r\nimport PageWrapper from '../component/PageWrapper';\r\nimport PokemonCard from '../component/PokemonCard';\r\n\r\nconst MyPokemon = () =>{\r\n\r\n\tconst ListWrapper = styled('div')`\r\n\t\tdisplay: flex;\r\n\t\t-ms-flex-wrap: wrap;\r\n\t\tflex-wrap: wrap;\r\n\t`;\r\n\r\n\tconst List = styled('div')`\r\n\t\t-webkit-box-flex: 0;\r\n\t\t-ms-flex: 0 0 50%;\r\n\t\tflex: 0 0 50%;\r\n\t\tmax-width: 50%;\r\n\t\t& > a{\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\t`;\r\n\t\r\n\treturn(\r\n\t\t<MyContext.Consumer>\r\n\t\t\t{context => (\r\n\t\t\t\t<PageWrapper title=\"My Pokemon\">\r\n\t\t\t\t\t<ListWrapper>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontext.myPokemon.map((data,index) => (\r\n\t\t\t\t\t\t\t\t<List key={index}>\r\n\t\t\t\t\t\t\t\t\t<PokemonCard data={data}></PokemonCard>\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ListWrapper>\r\n\t\t\t\t</PageWrapper>\r\n\t\t\t)}\r\n\t\t</MyContext.Consumer>\r\n\t)\r\n}\r\n\r\nexport default MyPokemon;","import styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook, faHandHoldingHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst BottomNavBar = () =>{\r\n\r\n\tconst Wrapper = styled('div')`\r\n\t\tposition: fixed;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tleft: 0;\r\n\t\tz-index: 1030;\r\n\t\tbackground: white;\r\n\t\tbox-shadow: 0px -2px 15px rgba(0,0,0,0.25);\r\n\t\tbackground: #3d7dca;\r\n\t\tcolor: white;\r\n\t`;\r\n\r\n\tconst Row = styled('div')`\r\n\t\tdisplay: flex;\r\n\t\t-ms-flex-wrap: wrap;\r\n\t\tflex-wrap: wrap;\r\n\t\t// margin-right: -15px;\r\n\t\t// margin-left: -15px;\r\n\t`;\r\n\r\n\tconst Column = styled('div')`\r\n\t\t-webkit-box-flex: 0;\r\n\t\t-ms-flex: 0 0 50%;\r\n\t\tflex: 0 0 50%;\r\n\t\tmax-width: 50%;\r\n\t\ttext-align: center;\r\n\t\tpadding: 15px 0px;\r\n\t\t& > a{\r\n\t\t\ttext-decoration: none;\r\n\t\t\tcolor: white;\r\n\t\t\tfont-weight: 500;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t\t&:last-child{\r\n\t\t\tbox-sizing: border-box;\r\n\t\t\tborder-left: 1px solid white;\r\n\t\t}\r\n\t`;\r\n\r\n\tconst NavName = styled('span')`\r\n\t\tmargin-left: 10px;\r\n\t`;\r\n\r\n\treturn(\r\n\t\t<Wrapper>\r\n\t\t\t<Row>\r\n\t\t\t\t<Column>\r\n\t\t\t\t\t<Link to=\"/\" data-testid=\"pokemon-list-link\">\r\n\t\t\t\t\t\t<FontAwesomeIcon className=\"mr-2\" icon={faBook} />\t\t\t\t\r\n\t\t\t\t\t\t<NavName>Pokemon List</NavName>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Column>\r\n\t\t\t\t<Column>\r\n\t\t\t\t\t<Link to=\"/my-pokemon\" data-testid=\"my-pokemon-link\">\r\n\t\t\t\t\t\t<FontAwesomeIcon className=\"mr-2\" icon={faHandHoldingHeart} />\t\r\n\t\t\t\t\t\t<NavName>My Pokemon</NavName>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Column>\r\n\t\t\t</Row>\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nexport default BottomNavBar;","import { useContext, useEffect } from \"react\";\r\nimport MyContext from \"../context/MyContext\";\r\nimport styled from '@emotion/styled';\r\n\r\nconst Wrapper = (props) =>{\r\n\tconst context = useContext(MyContext);\r\n\tuseEffect(() => {\r\n\t\tif(sessionStorage.getItem(\"allStateData\")){\r\n\t\t\t\r\n\t\t\tconst parsedData = JSON.parse(sessionStorage.getItem(\"allStateData\"))\r\n\t\t\tif(parsedData.pokemonList){\r\n\t\t\t\tcontext.setAllStateData(parsedData)\r\n\t\t\t}\r\n\t\t}\r\n\t  }, [])\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsessionStorage.setItem(\"allStateData\", JSON.stringify(context.allStateData))\r\n\t}, [context])\r\n\r\n\tconst Wrapper = styled('div')`\r\n\t\tmargin-bottom: 50px;\r\n\t\tmin-height: 100vh;\r\n\t\tbackground: rgba(255, 255,255,0.9);\r\n\t\t@media (min-width: 768px) {\r\n\t\t\tmax-width: 600px;\r\n\t\t\tmargin: auto;\r\n\t\t\tmargin-bottom: 50px;\r\n\t\t}\r\n\t`;\r\n\r\n\treturn(\r\n\t\t<Wrapper>{props.children}</Wrapper>\r\n\t)\r\n}\r\n\r\nexport default Wrapper;\r\n","\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport MyProvider from './context/MyProvider';\nimport PokemonList from './container/PokemonList';\nimport PokemonDetail from './container/PokemonDetail';\nimport MyPokemon from './container/MyPokemon';\nimport BottomNavBar from './component/BottomNavBar';\nimport Wrapper from './component/Wrapper';\n\nconst App = ()=> {\n\t\n\treturn (\n\t\t<MyProvider>\n\t\t\t<Router>\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<PokemonList data-testid=\"pokemon-list\" />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/my-pokemon\">\n\t\t\t\t\t\t\t<MyPokemon data-testid=\"my-pokemon\" />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/:pokemonName\">\n\t\t\t\t\t\t\t<PokemonDetail data-testid=\"pokemon-detail\" />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Wrapper>\n\t\t\t\t<BottomNavBar/>\n\t\t\t</Router>\n\t\t</MyProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst client = new ApolloClient({\n\turi: 'https://graphql-pokeapi.vercel.app/api/graphql',\n\tcache: new InMemoryCache()\n});\n\nReactDOM.render(\n\t<ApolloProvider client={client}>\n\t\t<App />\n\t</ApolloProvider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}